Z 65536

Assign(to : Z, from : Z)
PointsTo(var : Z, loc : Z) printtuples
# A pointer points to what it is assigned to
PointsTo(var, heap) :- Assign(var, heap).

# A pointer points to the transitive closure of its assignments
PointsTo(to, heap) :- Assign(to, from), PointsTo(from, heap).

##### Begin facts
#   %1 = alloca i32, align 4
Assign("*0", "stack_0").
#   %2 = alloca i32, align 4
Assign("*1", "stack_1").
#   %3 = alloca i8**, align 8
Assign("***2", "stack_2").
#   %x = alloca i8*, align 8
Assign("**3", "stack_3").
#   %y = alloca i8*, align 8
Assign("**4", "stack_4").
#   %z = alloca i8*, align 8
Assign("**5", "stack_5").
#   store i8** %argv, i8*** %3, align 8
Assign("**2_tmp", "**6").
#   %4 = call noalias i8* @malloc(i64 1) #3
Assign("*7", "heap_0").
#   store i8* %4, i8** %x, align 8
Assign("*3_tmp", "*7").
#   %5 = load i8** %x, align 8
Assign("*8", "*3_tmp").
#   %6 = load i8** %x, align 8
Assign("*9", "*3_tmp").
#   store i8* %6, i8** %y, align 8
Assign("*4_tmp", "*9").
#   %7 = load i8** %y, align 8
Assign("*10", "*4_tmp").
#   store i8* %7, i8** %z, align 8
Assign("*5_tmp", "*10").
#   %8 = load i8** %x, align 8
Assign("*11", "*3_tmp").
#   %11 = load i8** %y, align 8
Assign("*12", "*4_tmp").
#   %14 = load i8** %z, align 8
Assign("*13", "*5_tmp").
#   %17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str, i32 0, i32 0), i32 %10, i32 %13, i32 %16)
Assign("*14", "*15").
#### End facts
